{"version":3,"file":"ng-solcre-auth.umd.js","sources":["ng://ng-solcre-auth/lib/access-token.model.ts","ng://ng-solcre-auth/lib/environment.ts","ng://ng-solcre-auth/lib/solcre-auth-library.service.ts","ng://ng-solcre-auth/lib/auth.component.ts","ng://ng-solcre-auth/lib/auth.module.ts","ng://ng-solcre-auth/lib/auth-guard-service.ts","ng://ng-solcre-auth/lib/auth.interceptor.ts"],"sourcesContent":["export class AccessTokenModel {\n    constructor(\n        public token: string,\n        public refreshToken: string,\n        public expiration: Date\n    ) { }\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiURL: \"https://api.columnis.com/\",\n  codeURI: \"001/columnis/clients\",\n  oauthURI: '/oauth',\n  userGroupsURI: '/columnis/user_groups',\n  permissionsURI: '/columnis/permissions',\n  usersURI: '/columnis/users'\n\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { LocalStorageService } from 'angular-2-local-storage';\nimport { HttpClient, HttpErrorResponse, HttpParams } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { EventEmitter } from '@angular/core';\nimport { AccessTokenModel } from './access-token.model';\nimport { Injectable } from '@angular/core';\nimport { environment } from './environment';\n\n@Injectable({ //duda\n  providedIn: 'root'\n})\nexport class AuthService {\n\n    codeDomain: string;\n    public searchingCode: EventEmitter<boolean> = new EventEmitter();\n    public codeNotFound: EventEmitter<boolean> = new EventEmitter();\n\n    private accessToken: AccessTokenModel;\n\n    constructor(\n        private router: Router,\n        private httpClient: HttpClient,\n        private localStorageService: LocalStorageService\n    ) { }\n\n    public isAuthenticated() {\n        let currentUser = this.localStorageService.get('access_token');\n        if (currentUser) {\n            return true;\n        };\n        return false;\n    }\n\n    public login(email: string, password: string) {\n        let username = email.split(\"@\");\n\n        this.httpClient.post(environment.apiURL + this.codeDomain + environment.oauthURI, {\n            \"client_id\": \"columnis_manager\",\n            \"grant_type\": \"password\",\n            \"username\": username[0],\n            \"password\": password\n        }).subscribe(\n            (response: any) => {\n                this.localStorageService.set('code', this.codeDomain);\n                this.localStorageService.set('access_token', response['access_token']);\n\n                // this.localStorageService.set('refresh_token', response['refresh_token']);\n                console.log(\"Logged in\", response);\n                this.router.navigate(['/']);\n                this.accessToken = this.parseAccessToken(response);\n            },\n            (error: HttpErrorResponse) => {\n                let message: string;\n                // this.translateService.get('share.dialog.errorPassword').subscribe(response => {\n                //     message = response;\n                // });\n                console.log(message);\n                console.log(error.error.detail);\n            }\n\n\n        );\n    }\n\n    public logout() {\n        // this.localStorageService.clearAll();\n        this.localStorageService.remove('access_token');\n        this.localStorageService.remove('code');\n        this.router.navigate(['/oauth']);\n    }\n\n    public getAccessToken(): string {\n        return this.localStorageService.get('access_token');\n    }\n\n\n    public setCode(domain: string) {\n        this.searchingCode.emit(true);\n        if (this.localStorageService.get(domain)) {\n            console.log(\"desde ls\");\n            this.codeNotFound.emit(false);\n            this.searchingCode.emit(false);\n            this.codeDomain = this.localStorageService.get(domain);\n        } else {\n            let params = new HttpParams().set('domain', domain);\n            this.httpClient.get(environment.apiURL + environment.codeURI, { params }).subscribe((response: any) => {\n                this.codeDomain = response.code;\n                if (!((this.codeDomain) == '000')) {\n                    this.localStorageService.set(domain, this.codeDomain);\n                    this.searchingCode.emit(false); //si encuentra un codigo\n                } else {\n                    this.searchingCode.emit(false); //si no encuentra\n                    this.codeNotFound.emit(true);\n                }\n            }, (error: HttpErrorResponse) => {\n                this.searchingCode.emit(false); //si no encuentra\n                this.codeNotFound.emit(true);\n                console.log(error);\n            });\n        }\n    }\n\n    public getCode(): string {\n        return this.localStorageService.get('code');\n    }\n\n    private parseAccessToken(obj: any): AccessTokenModel {\n        let accessToken: AccessTokenModel = null;\n\n        //Check access token\n        if (obj && obj.access_token) {\n            //parse expiration date\n            let expiration = new Date();\n            expiration.setMinutes(expiration.getMinutes() + (obj.expires_in / 60));\n\n            //Creates the access token model\n            accessToken = new AccessTokenModel(\n                obj.access_token,\n                obj.refresh_token,\n                expiration\n            );\n        }\n        console.log(accessToken);\n        return accessToken;\n    }\n\n}","import { Component, OnInit } from '@angular/core';\nimport { Validators, FormGroup, FormBuilder } from '@angular/forms';\nimport { AuthService } from './solcre-auth-library.service';\n@Component({\n  selector: 'lib-auth-library',\n  templateUrl: './login.component.html',\n  styles: [] //syles broken the library\n})\nexport class SolcreAuthLibraryComponent implements OnInit {\n\n  signinForm: FormGroup;\n  searchingCode: boolean;\n  codeNotFound: boolean;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private authService: AuthService,\n  ) { }\n\n  ngOnInit() {\n    this.signinForm = this.formBuilder.group({\n      'email': this.formBuilder.control(null, [Validators.required, Validators.email]),\n      'password': this.formBuilder.control(null, Validators.required)\n    });\n    this.authService.codeNotFound.subscribe((state: boolean) => {\n      this.codeNotFound = state;\n    });\n    this.authService.searchingCode.subscribe((state: boolean) => {\n      this.searchingCode = state;\n    });\n  }\n\n  onSubmit() {\n    this.authService.login(this.signinForm.value.email, this.signinForm.value.password);\n  }\n\n  onBlur() {\n    this.codeNotFound = false;\n    this.searchingCode = false;\n    this.signinForm.invalid;\n    if (this.signinForm.value.email && this.signinForm.value.email.indexOf('@') > -1) {\n      let data: string = (this.signinForm.value.email).split(\"@\", 2);\n      let domain: string = data[1];\n      this.authService.setCode(domain);\n    }\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { BrowserModule } from '@angular/platform-browser';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { AuthService } from './solcre-auth-library.service';\nimport { AuthGuard } from './auth-guard-service';\nimport { SolcreAuthLibraryComponent } from './auth.component';\nimport { CommonModule } from '@angular/common';\nimport { LocalStorageModule } from 'angular-2-local-storage';\n\n@NgModule({\n    declarations: [\n        SolcreAuthLibraryComponent,\n    ], \n    imports: [\n        LocalStorageModule,\n        CommonModule,\n        FormsModule,\n        HttpClientModule,\n        ReactiveFormsModule,\n    ],\n    exports: [\n        SolcreAuthLibraryComponent\n    ],\n    providers: [\n        AuthService,\n    ]\n})\nexport class AuthModule { } ","import { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { Injectable } from '@angular/core';\nimport { AuthService } from './solcre-auth-library.service';\n\n\n@Injectable({ //duda\n    providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n    constructor(private authService: AuthService, private router: Router) { }\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n       if (this.authService.isAuthenticated()) {\n            return true;\n        } else {\n            this.router.navigate(['/oauth']);\n        }\n    }\n\n}","import { Injectable } from '@angular/core';\nimport { \n    HttpEvent, \n    HttpInterceptor, \n    HttpHandler, \n    HttpRequest,\n\tHttpErrorResponse\n} from '@angular/common/http';\nimport { Observable, BehaviorSubject, throwError } from 'rxjs';\nimport { catchError, filter, take, switchMap, finalize } from 'rxjs/operators';\nâ\nimport { AuthService } from './solcre-auth-library.service';\n// âimport { AccessTokenModel } from './access-token.model';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n    isRefreshingToken: boolean = false;\n    tokenSubject: BehaviorSubject<string> = new BehaviorSubject<string>(null);\nâ\n    constructor(\n        private authService: AuthService) { }\nâ\n    \n    //Intercep method\n    public intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        // Pass on the cloned request instead of the original request.\n        return next.handle(req)\n            .pipe(\n\t\t\t\tcatchError((error, caught) => {\n\t\t\t\t\t//Check error type\n\t\t\t\t\tif (error instanceof HttpErrorResponse) {\n                        console.log(error);\n                        switch (error.status) {\n\t\t\t\t\t\t\tcase 400:\n\t\t\t\t\t\t\t\treturn this.handle400Error(error);\n\t\t\t\t\t\t\tcase 401:\n\t\t\t\t\t\t\t\treturn this.handle401Error(error, req, next);\n\t\t\t\t\t\t\tcase 403:\n\t\t\t\t\t\t\t\treturn this.handle403Error(error);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn new Observable<HttpEvent<any>>();\n\t\t\t\t})\n\t\t\t) as any;\n    }\nâ\n    //Add authorization header to requests\n    private addToken(req: HttpRequest<any>, token: string): HttpRequest<any> {\n        return req.clone({ \n            setHeaders: { \n                Authorization: 'Bearer ' + token \n            }\n        });\n    }\nâ\n    //Helper function when the refresh token doesnt work\n    private logout(error: string){\n        //logout users, redirect to login page\n        this.authService.logout();\n        return throwError(error);\n    }\nâ\n    //Handle 403 error\n    private handle403Error(error: HttpErrorResponse) {\n        return this.logout(error.message);\n    }\nâ\n    //Hanfle 401 error\n    private handle401Error(error: HttpErrorResponse, req: HttpRequest<any>, next: HttpHandler) {\n        //@@TODO: find a way to configure it\n        //Ignore 401 status when the url are Oauth\n        if(req.url.indexOf('/oauth') > -1){\n            return throwError(error);\n        }\n        return this.logout(error.message);\nâ       \n    }\nâ\n    //Handle 400 error\n    private handle400Error(error:HttpErrorResponse) {\n        if (error \n            && error.status === 400 \n            && error.error \n            && error.error.error === 'invalid_grant') {\n            // If we get a 400 and the error message is 'invalid_grant', the token is no longer valid so logout.\n            return this.logout(error.message);\n        }\n        \n        //Normal flow\n        return throwError(error);\n    }\n}"],"names":["EventEmitter","HttpParams","Injectable","Router","HttpClient","LocalStorageService","Validators","Component","FormBuilder","NgModule","LocalStorageModule","CommonModule","FormsModule","HttpClientModule","ReactiveFormsModule","BehaviorSubject","catchError","HttpErrorResponse","Observable","throwError"],"mappings":"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"}