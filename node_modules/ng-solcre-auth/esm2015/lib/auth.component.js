/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component } from '@angular/core';
import { Validators, FormBuilder } from '@angular/forms';
import { AuthService } from './solcre-auth-library.service';
export class SolcreAuthLibraryComponent {
    /**
     * @param {?} formBuilder
     * @param {?} authService
     */
    constructor(formBuilder, authService) {
        this.formBuilder = formBuilder;
        this.authService = authService;
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.signinForm = this.formBuilder.group({
            'email': this.formBuilder.control(null, [Validators.required, Validators.email]),
            'password': this.formBuilder.control(null, Validators.required)
        });
        this.authService.codeNotFound.subscribe((/**
         * @param {?} state
         * @return {?}
         */
        (state) => {
            this.codeNotFound = state;
        }));
        this.authService.searchingCode.subscribe((/**
         * @param {?} state
         * @return {?}
         */
        (state) => {
            this.searchingCode = state;
        }));
    }
    /**
     * @return {?}
     */
    onSubmit() {
        this.authService.login(this.signinForm.value.email, this.signinForm.value.password);
    }
    /**
     * @return {?}
     */
    onBlur() {
        this.codeNotFound = false;
        this.searchingCode = false;
        this.signinForm.invalid;
        if (this.signinForm.value.email && this.signinForm.value.email.indexOf('@') > -1) {
            /** @type {?} */
            let data = (this.signinForm.value.email).split("@", 2);
            /** @type {?} */
            let domain = data[1];
            this.authService.setCode(domain);
        }
    }
}
SolcreAuthLibraryComponent.decorators = [
    { type: Component, args: [{
                selector: 'lib-auth-library',
                template: "<form \n    name=\"app-login-form\"\n    id=\"app-login-form\"\n    class=\"styled-form\" \n    [formGroup]=\"signinForm\" \n    (ngSubmit)=\"onSubmit()\">\n    <h1>Auth library</h1>\n    <div>\n        <input class=\"input\" type=\"text\" (blur)=\"onBlur()\" id=\"email\" formControlName=\"email\" name=\"email\"><br>\n    </div>\n    <label *ngIf=\"searchingCode\" for=\"email\">Buscando dominio...</label>\n    <label *ngIf=\"codeNotFound\" for=\"email\">*Error al encontrar dominio</label>\n    <div>\n        <input class=\"input\" type=\"password\" id=\"password\" formControlName=\"password\" name=\"password\"><br>\n    </div>\n    <button class=\"rounded-btn\" type=\"submit\">Entrar</button>\n</form>"
            }] }
];
/** @nocollapse */
SolcreAuthLibraryComponent.ctorParameters = () => [
    { type: FormBuilder },
    { type: AuthService }
];
if (false) {
    /** @type {?} */
    SolcreAuthLibraryComponent.prototype.signinForm;
    /** @type {?} */
    SolcreAuthLibraryComponent.prototype.searchingCode;
    /** @type {?} */
    SolcreAuthLibraryComponent.prototype.codeNotFound;
    /**
     * @type {?}
     * @private
     */
    SolcreAuthLibraryComponent.prototype.formBuilder;
    /**
     * @type {?}
     * @private
     */
    SolcreAuthLibraryComponent.prototype.authService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXV0aC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZy1zb2xjcmUtYXV0aC8iLCJzb3VyY2VzIjpbImxpYi9hdXRoLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBVSxNQUFNLGVBQWUsQ0FBQztBQUNsRCxPQUFPLEVBQUUsVUFBVSxFQUFhLFdBQVcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQ3BFLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSwrQkFBK0IsQ0FBQztBQU01RCxNQUFNLE9BQU8sMEJBQTBCOzs7OztJQU1yQyxZQUNVLFdBQXdCLEVBQ3hCLFdBQXdCO1FBRHhCLGdCQUFXLEdBQVgsV0FBVyxDQUFhO1FBQ3hCLGdCQUFXLEdBQVgsV0FBVyxDQUFhO0lBQzlCLENBQUM7Ozs7SUFFTCxRQUFRO1FBQ04sSUFBSSxDQUFDLFVBQVUsR0FBRyxJQUFJLENBQUMsV0FBVyxDQUFDLEtBQUssQ0FBQztZQUN2QyxPQUFPLEVBQUUsSUFBSSxDQUFDLFdBQVcsQ0FBQyxPQUFPLENBQUMsSUFBSSxFQUFFLENBQUMsVUFBVSxDQUFDLFFBQVEsRUFBRSxVQUFVLENBQUMsS0FBSyxDQUFDLENBQUM7WUFDaEYsVUFBVSxFQUFFLElBQUksQ0FBQyxXQUFXLENBQUMsT0FBTyxDQUFDLElBQUksRUFBRSxVQUFVLENBQUMsUUFBUSxDQUFDO1NBQ2hFLENBQUMsQ0FBQztRQUNILElBQUksQ0FBQyxXQUFXLENBQUMsWUFBWSxDQUFDLFNBQVM7Ozs7UUFBQyxDQUFDLEtBQWMsRUFBRSxFQUFFO1lBQ3pELElBQUksQ0FBQyxZQUFZLEdBQUcsS0FBSyxDQUFDO1FBQzVCLENBQUMsRUFBQyxDQUFDO1FBQ0gsSUFBSSxDQUFDLFdBQVcsQ0FBQyxhQUFhLENBQUMsU0FBUzs7OztRQUFDLENBQUMsS0FBYyxFQUFFLEVBQUU7WUFDMUQsSUFBSSxDQUFDLGFBQWEsR0FBRyxLQUFLLENBQUM7UUFDN0IsQ0FBQyxFQUFDLENBQUM7SUFDTCxDQUFDOzs7O0lBRUQsUUFBUTtRQUNOLElBQUksQ0FBQyxXQUFXLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsS0FBSyxDQUFDLEtBQUssRUFBRSxJQUFJLENBQUMsVUFBVSxDQUFDLEtBQUssQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUN0RixDQUFDOzs7O0lBRUQsTUFBTTtRQUNKLElBQUksQ0FBQyxZQUFZLEdBQUcsS0FBSyxDQUFDO1FBQzFCLElBQUksQ0FBQyxhQUFhLEdBQUcsS0FBSyxDQUFDO1FBQzNCLElBQUksQ0FBQyxVQUFVLENBQUMsT0FBTyxDQUFDO1FBQ3hCLElBQUksSUFBSSxDQUFDLFVBQVUsQ0FBQyxLQUFLLENBQUMsS0FBSyxJQUFJLElBQUksQ0FBQyxVQUFVLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEVBQUU7O2dCQUM1RSxJQUFJLEdBQVcsQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQyxLQUFLLENBQUMsR0FBRyxFQUFFLENBQUMsQ0FBQzs7Z0JBQzFELE1BQU0sR0FBVyxJQUFJLENBQUMsQ0FBQyxDQUFDO1lBQzVCLElBQUksQ0FBQyxXQUFXLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDO1NBQ2xDO0lBQ0gsQ0FBQzs7O1lBMUNGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsa0JBQWtCO2dCQUM1QixrdEJBQXFDO2FBRXRDOzs7O1lBTitCLFdBQVc7WUFDbEMsV0FBVzs7OztJQVFsQixnREFBc0I7O0lBQ3RCLG1EQUF1Qjs7SUFDdkIsa0RBQXNCOzs7OztJQUdwQixpREFBZ0M7Ozs7O0lBQ2hDLGlEQUFnQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBWYWxpZGF0b3JzLCBGb3JtR3JvdXAsIEZvcm1CdWlsZGVyIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuaW1wb3J0IHsgQXV0aFNlcnZpY2UgfSBmcm9tICcuL3NvbGNyZS1hdXRoLWxpYnJhcnkuc2VydmljZSc7XG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdsaWItYXV0aC1saWJyYXJ5JyxcbiAgdGVtcGxhdGVVcmw6ICcuL2xvZ2luLmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVzOiBbXSAvL3N5bGVzIGJyb2tlbiB0aGUgbGlicmFyeVxufSlcbmV4cG9ydCBjbGFzcyBTb2xjcmVBdXRoTGlicmFyeUNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG5cbiAgc2lnbmluRm9ybTogRm9ybUdyb3VwO1xuICBzZWFyY2hpbmdDb2RlOiBib29sZWFuO1xuICBjb2RlTm90Rm91bmQ6IGJvb2xlYW47XG5cbiAgY29uc3RydWN0b3IoXG4gICAgcHJpdmF0ZSBmb3JtQnVpbGRlcjogRm9ybUJ1aWxkZXIsXG4gICAgcHJpdmF0ZSBhdXRoU2VydmljZTogQXV0aFNlcnZpY2UsXG4gICkgeyB9XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgdGhpcy5zaWduaW5Gb3JtID0gdGhpcy5mb3JtQnVpbGRlci5ncm91cCh7XG4gICAgICAnZW1haWwnOiB0aGlzLmZvcm1CdWlsZGVyLmNvbnRyb2wobnVsbCwgW1ZhbGlkYXRvcnMucmVxdWlyZWQsIFZhbGlkYXRvcnMuZW1haWxdKSxcbiAgICAgICdwYXNzd29yZCc6IHRoaXMuZm9ybUJ1aWxkZXIuY29udHJvbChudWxsLCBWYWxpZGF0b3JzLnJlcXVpcmVkKVxuICAgIH0pO1xuICAgIHRoaXMuYXV0aFNlcnZpY2UuY29kZU5vdEZvdW5kLnN1YnNjcmliZSgoc3RhdGU6IGJvb2xlYW4pID0+IHtcbiAgICAgIHRoaXMuY29kZU5vdEZvdW5kID0gc3RhdGU7XG4gICAgfSk7XG4gICAgdGhpcy5hdXRoU2VydmljZS5zZWFyY2hpbmdDb2RlLnN1YnNjcmliZSgoc3RhdGU6IGJvb2xlYW4pID0+IHtcbiAgICAgIHRoaXMuc2VhcmNoaW5nQ29kZSA9IHN0YXRlO1xuICAgIH0pO1xuICB9XG5cbiAgb25TdWJtaXQoKSB7XG4gICAgdGhpcy5hdXRoU2VydmljZS5sb2dpbih0aGlzLnNpZ25pbkZvcm0udmFsdWUuZW1haWwsIHRoaXMuc2lnbmluRm9ybS52YWx1ZS5wYXNzd29yZCk7XG4gIH1cblxuICBvbkJsdXIoKSB7XG4gICAgdGhpcy5jb2RlTm90Rm91bmQgPSBmYWxzZTtcbiAgICB0aGlzLnNlYXJjaGluZ0NvZGUgPSBmYWxzZTtcbiAgICB0aGlzLnNpZ25pbkZvcm0uaW52YWxpZDtcbiAgICBpZiAodGhpcy5zaWduaW5Gb3JtLnZhbHVlLmVtYWlsICYmIHRoaXMuc2lnbmluRm9ybS52YWx1ZS5lbWFpbC5pbmRleE9mKCdAJykgPiAtMSkge1xuICAgICAgbGV0IGRhdGE6IHN0cmluZyA9ICh0aGlzLnNpZ25pbkZvcm0udmFsdWUuZW1haWwpLnNwbGl0KFwiQFwiLCAyKTtcbiAgICAgIGxldCBkb21haW46IHN0cmluZyA9IGRhdGFbMV07XG4gICAgICB0aGlzLmF1dGhTZXJ2aWNlLnNldENvZGUoZG9tYWluKTtcbiAgICB9XG4gIH1cbn1cbiJdfQ==