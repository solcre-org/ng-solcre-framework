/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component } from '@angular/core';
import { Validators, FormBuilder } from '@angular/forms';
import { AuthService } from './solcre-auth-library.service';
var SolcreAuthLibraryComponent = /** @class */ (function () {
    function SolcreAuthLibraryComponent(formBuilder, authService) {
        this.formBuilder = formBuilder;
        this.authService = authService;
    }
    /**
     * @return {?}
     */
    SolcreAuthLibraryComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.signinForm = this.formBuilder.group({
            'email': this.formBuilder.control(null, [Validators.required, Validators.email]),
            'password': this.formBuilder.control(null, Validators.required)
        });
        this.authService.codeNotFound.subscribe((/**
         * @param {?} state
         * @return {?}
         */
        function (state) {
            _this.codeNotFound = state;
        }));
        this.authService.searchingCode.subscribe((/**
         * @param {?} state
         * @return {?}
         */
        function (state) {
            _this.searchingCode = state;
        }));
    };
    /**
     * @return {?}
     */
    SolcreAuthLibraryComponent.prototype.onSubmit = /**
     * @return {?}
     */
    function () {
        this.authService.login(this.signinForm.value.email, this.signinForm.value.password);
    };
    /**
     * @return {?}
     */
    SolcreAuthLibraryComponent.prototype.onBlur = /**
     * @return {?}
     */
    function () {
        this.codeNotFound = false;
        this.searchingCode = false;
        this.signinForm.invalid;
        if (this.signinForm.value.email && this.signinForm.value.email.indexOf('@') > -1) {
            /** @type {?} */
            var data = (this.signinForm.value.email).split("@", 2);
            /** @type {?} */
            var domain = data[1];
            this.authService.setCode(domain);
        }
    };
    SolcreAuthLibraryComponent.decorators = [
        { type: Component, args: [{
                    selector: 'lib-auth-library',
                    template: "<form \n    name=\"app-login-form\"\n    id=\"app-login-form\"\n    class=\"styled-form\" \n    [formGroup]=\"signinForm\" \n    (ngSubmit)=\"onSubmit()\">\n    <h1>Auth library</h1>\n    <div>\n        <input class=\"input\" type=\"text\" (blur)=\"onBlur()\" id=\"email\" formControlName=\"email\" name=\"email\"><br>\n    </div>\n    <label *ngIf=\"searchingCode\" for=\"email\">Buscando dominio...</label>\n    <label *ngIf=\"codeNotFound\" for=\"email\">*Error al encontrar dominio</label>\n    <div>\n        <input class=\"input\" type=\"password\" id=\"password\" formControlName=\"password\" name=\"password\"><br>\n    </div>\n    <button class=\"rounded-btn\" type=\"submit\">Entrar</button>\n</form>"
                }] }
    ];
    /** @nocollapse */
    SolcreAuthLibraryComponent.ctorParameters = function () { return [
        { type: FormBuilder },
        { type: AuthService }
    ]; };
    return SolcreAuthLibraryComponent;
}());
export { SolcreAuthLibraryComponent };
if (false) {
    /** @type {?} */
    SolcreAuthLibraryComponent.prototype.signinForm;
    /** @type {?} */
    SolcreAuthLibraryComponent.prototype.searchingCode;
    /** @type {?} */
    SolcreAuthLibraryComponent.prototype.codeNotFound;
    /**
     * @type {?}
     * @private
     */
    SolcreAuthLibraryComponent.prototype.formBuilder;
    /**
     * @type {?}
     * @private
     */
    SolcreAuthLibraryComponent.prototype.authService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXV0aC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZy1zb2xjcmUtYXV0aC8iLCJzb3VyY2VzIjpbImxpYi9hdXRoLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBVSxNQUFNLGVBQWUsQ0FBQztBQUNsRCxPQUFPLEVBQUUsVUFBVSxFQUFhLFdBQVcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQ3BFLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSwrQkFBK0IsQ0FBQztBQUM1RDtJQVdFLG9DQUNVLFdBQXdCLEVBQ3hCLFdBQXdCO1FBRHhCLGdCQUFXLEdBQVgsV0FBVyxDQUFhO1FBQ3hCLGdCQUFXLEdBQVgsV0FBVyxDQUFhO0lBQzlCLENBQUM7Ozs7SUFFTCw2Q0FBUTs7O0lBQVI7UUFBQSxpQkFXQztRQVZDLElBQUksQ0FBQyxVQUFVLEdBQUcsSUFBSSxDQUFDLFdBQVcsQ0FBQyxLQUFLLENBQUM7WUFDdkMsT0FBTyxFQUFFLElBQUksQ0FBQyxXQUFXLENBQUMsT0FBTyxDQUFDLElBQUksRUFBRSxDQUFDLFVBQVUsQ0FBQyxRQUFRLEVBQUUsVUFBVSxDQUFDLEtBQUssQ0FBQyxDQUFDO1lBQ2hGLFVBQVUsRUFBRSxJQUFJLENBQUMsV0FBVyxDQUFDLE9BQU8sQ0FBQyxJQUFJLEVBQUUsVUFBVSxDQUFDLFFBQVEsQ0FBQztTQUNoRSxDQUFDLENBQUM7UUFDSCxJQUFJLENBQUMsV0FBVyxDQUFDLFlBQVksQ0FBQyxTQUFTOzs7O1FBQUMsVUFBQyxLQUFjO1lBQ3JELEtBQUksQ0FBQyxZQUFZLEdBQUcsS0FBSyxDQUFDO1FBQzVCLENBQUMsRUFBQyxDQUFDO1FBQ0gsSUFBSSxDQUFDLFdBQVcsQ0FBQyxhQUFhLENBQUMsU0FBUzs7OztRQUFDLFVBQUMsS0FBYztZQUN0RCxLQUFJLENBQUMsYUFBYSxHQUFHLEtBQUssQ0FBQztRQUM3QixDQUFDLEVBQUMsQ0FBQztJQUNMLENBQUM7Ozs7SUFFRCw2Q0FBUTs7O0lBQVI7UUFDRSxJQUFJLENBQUMsV0FBVyxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLEtBQUssQ0FBQyxLQUFLLEVBQUUsSUFBSSxDQUFDLFVBQVUsQ0FBQyxLQUFLLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDdEYsQ0FBQzs7OztJQUVELDJDQUFNOzs7SUFBTjtRQUNFLElBQUksQ0FBQyxZQUFZLEdBQUcsS0FBSyxDQUFDO1FBQzFCLElBQUksQ0FBQyxhQUFhLEdBQUcsS0FBSyxDQUFDO1FBQzNCLElBQUksQ0FBQyxVQUFVLENBQUMsT0FBTyxDQUFDO1FBQ3hCLElBQUksSUFBSSxDQUFDLFVBQVUsQ0FBQyxLQUFLLENBQUMsS0FBSyxJQUFJLElBQUksQ0FBQyxVQUFVLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEVBQUU7O2dCQUM1RSxJQUFJLEdBQVcsQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQyxLQUFLLENBQUMsR0FBRyxFQUFFLENBQUMsQ0FBQzs7Z0JBQzFELE1BQU0sR0FBVyxJQUFJLENBQUMsQ0FBQyxDQUFDO1lBQzVCLElBQUksQ0FBQyxXQUFXLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDO1NBQ2xDO0lBQ0gsQ0FBQzs7Z0JBMUNGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsa0JBQWtCO29CQUM1QixrdEJBQXFDO2lCQUV0Qzs7OztnQkFOK0IsV0FBVztnQkFDbEMsV0FBVzs7SUE0Q3BCLGlDQUFDO0NBQUEsQUEzQ0QsSUEyQ0M7U0F0Q1ksMEJBQTBCOzs7SUFFckMsZ0RBQXNCOztJQUN0QixtREFBdUI7O0lBQ3ZCLGtEQUFzQjs7Ozs7SUFHcEIsaURBQWdDOzs7OztJQUNoQyxpREFBZ0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIE9uSW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgVmFsaWRhdG9ycywgRm9ybUdyb3VwLCBGb3JtQnVpbGRlciB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcbmltcG9ydCB7IEF1dGhTZXJ2aWNlIH0gZnJvbSAnLi9zb2xjcmUtYXV0aC1saWJyYXJ5LnNlcnZpY2UnO1xuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnbGliLWF1dGgtbGlicmFyeScsXG4gIHRlbXBsYXRlVXJsOiAnLi9sb2dpbi5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlczogW10gLy9zeWxlcyBicm9rZW4gdGhlIGxpYnJhcnlcbn0pXG5leHBvcnQgY2xhc3MgU29sY3JlQXV0aExpYnJhcnlDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuXG4gIHNpZ25pbkZvcm06IEZvcm1Hcm91cDtcbiAgc2VhcmNoaW5nQ29kZTogYm9vbGVhbjtcbiAgY29kZU5vdEZvdW5kOiBib29sZWFuO1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgIHByaXZhdGUgZm9ybUJ1aWxkZXI6IEZvcm1CdWlsZGVyLFxuICAgIHByaXZhdGUgYXV0aFNlcnZpY2U6IEF1dGhTZXJ2aWNlLFxuICApIHsgfVxuXG4gIG5nT25Jbml0KCkge1xuICAgIHRoaXMuc2lnbmluRm9ybSA9IHRoaXMuZm9ybUJ1aWxkZXIuZ3JvdXAoe1xuICAgICAgJ2VtYWlsJzogdGhpcy5mb3JtQnVpbGRlci5jb250cm9sKG51bGwsIFtWYWxpZGF0b3JzLnJlcXVpcmVkLCBWYWxpZGF0b3JzLmVtYWlsXSksXG4gICAgICAncGFzc3dvcmQnOiB0aGlzLmZvcm1CdWlsZGVyLmNvbnRyb2wobnVsbCwgVmFsaWRhdG9ycy5yZXF1aXJlZClcbiAgICB9KTtcbiAgICB0aGlzLmF1dGhTZXJ2aWNlLmNvZGVOb3RGb3VuZC5zdWJzY3JpYmUoKHN0YXRlOiBib29sZWFuKSA9PiB7XG4gICAgICB0aGlzLmNvZGVOb3RGb3VuZCA9IHN0YXRlO1xuICAgIH0pO1xuICAgIHRoaXMuYXV0aFNlcnZpY2Uuc2VhcmNoaW5nQ29kZS5zdWJzY3JpYmUoKHN0YXRlOiBib29sZWFuKSA9PiB7XG4gICAgICB0aGlzLnNlYXJjaGluZ0NvZGUgPSBzdGF0ZTtcbiAgICB9KTtcbiAgfVxuXG4gIG9uU3VibWl0KCkge1xuICAgIHRoaXMuYXV0aFNlcnZpY2UubG9naW4odGhpcy5zaWduaW5Gb3JtLnZhbHVlLmVtYWlsLCB0aGlzLnNpZ25pbkZvcm0udmFsdWUucGFzc3dvcmQpO1xuICB9XG5cbiAgb25CbHVyKCkge1xuICAgIHRoaXMuY29kZU5vdEZvdW5kID0gZmFsc2U7XG4gICAgdGhpcy5zZWFyY2hpbmdDb2RlID0gZmFsc2U7XG4gICAgdGhpcy5zaWduaW5Gb3JtLmludmFsaWQ7XG4gICAgaWYgKHRoaXMuc2lnbmluRm9ybS52YWx1ZS5lbWFpbCAmJiB0aGlzLnNpZ25pbkZvcm0udmFsdWUuZW1haWwuaW5kZXhPZignQCcpID4gLTEpIHtcbiAgICAgIGxldCBkYXRhOiBzdHJpbmcgPSAodGhpcy5zaWduaW5Gb3JtLnZhbHVlLmVtYWlsKS5zcGxpdChcIkBcIiwgMik7XG4gICAgICBsZXQgZG9tYWluOiBzdHJpbmcgPSBkYXRhWzFdO1xuICAgICAgdGhpcy5hdXRoU2VydmljZS5zZXRDb2RlKGRvbWFpbik7XG4gICAgfVxuICB9XG59XG4iXX0=