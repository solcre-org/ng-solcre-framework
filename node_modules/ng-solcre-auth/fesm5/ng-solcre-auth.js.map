{"version":3,"file":"ng-solcre-auth.js","sources":["ng://ng-solcre-auth/lib/access-token.model.ts","ng://ng-solcre-auth/lib/environment.ts","ng://ng-solcre-auth/lib/solcre-auth-library.service.ts","ng://ng-solcre-auth/lib/auth.component.ts","ng://ng-solcre-auth/lib/auth.module.ts","ng://ng-solcre-auth/lib/auth-guard-service.ts","ng://ng-solcre-auth/lib/auth.interceptor.ts"],"sourcesContent":["export class AccessTokenModel {\n    constructor(\n        public token: string,\n        public refreshToken: string,\n        public expiration: Date\n    ) { }\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiURL: \"https://api.columnis.com/\",\n  codeURI: \"001/columnis/clients\",\n  oauthURI: '/oauth',\n  userGroupsURI: '/columnis/user_groups',\n  permissionsURI: '/columnis/permissions',\n  usersURI: '/columnis/users'\n\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { LocalStorageService } from 'angular-2-local-storage';\nimport { HttpClient, HttpErrorResponse, HttpParams } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { EventEmitter } from '@angular/core';\nimport { AccessTokenModel } from './access-token.model';\nimport { Injectable } from '@angular/core';\nimport { environment } from './environment';\n\n@Injectable({ //duda\n  providedIn: 'root'\n})\nexport class AuthService {\n\n    codeDomain: string;\n    public searchingCode: EventEmitter<boolean> = new EventEmitter();\n    public codeNotFound: EventEmitter<boolean> = new EventEmitter();\n\n    private accessToken: AccessTokenModel;\n\n    constructor(\n        private router: Router,\n        private httpClient: HttpClient,\n        private localStorageService: LocalStorageService\n    ) { }\n\n    public isAuthenticated() {\n        let currentUser = this.localStorageService.get('access_token');\n        if (currentUser) {\n            return true;\n        };\n        return false;\n    }\n\n    public login(email: string, password: string) {\n        let username = email.split(\"@\");\n\n        this.httpClient.post(environment.apiURL + this.codeDomain + environment.oauthURI, {\n            \"client_id\": \"columnis_manager\",\n            \"grant_type\": \"password\",\n            \"username\": username[0],\n            \"password\": password\n        }).subscribe(\n            (response: any) => {\n                this.localStorageService.set('code', this.codeDomain);\n                this.localStorageService.set('access_token', response['access_token']);\n\n                // this.localStorageService.set('refresh_token', response['refresh_token']);\n                console.log(\"Logged in\", response);\n                this.router.navigate(['/']);\n                this.accessToken = this.parseAccessToken(response);\n            },\n            (error: HttpErrorResponse) => {\n                let message: string;\n                // this.translateService.get('share.dialog.errorPassword').subscribe(response => {\n                //     message = response;\n                // });\n                console.log(message);\n                console.log(error.error.detail);\n            }\n\n\n        );\n    }\n\n    public logout() {\n        // this.localStorageService.clearAll();\n        this.localStorageService.remove('access_token');\n        this.localStorageService.remove('code');\n        this.router.navigate(['/oauth']);\n    }\n\n    public getAccessToken(): string {\n        return this.localStorageService.get('access_token');\n    }\n\n\n    public setCode(domain: string) {\n        this.searchingCode.emit(true);\n        if (this.localStorageService.get(domain)) {\n            console.log(\"desde ls\");\n            this.codeNotFound.emit(false);\n            this.searchingCode.emit(false);\n            this.codeDomain = this.localStorageService.get(domain);\n        } else {\n            let params = new HttpParams().set('domain', domain);\n            this.httpClient.get(environment.apiURL + environment.codeURI, { params }).subscribe((response: any) => {\n                this.codeDomain = response.code;\n                if (!((this.codeDomain) == '000')) {\n                    this.localStorageService.set(domain, this.codeDomain);\n                    this.searchingCode.emit(false); //si encuentra un codigo\n                } else {\n                    this.searchingCode.emit(false); //si no encuentra\n                    this.codeNotFound.emit(true);\n                }\n            }, (error: HttpErrorResponse) => {\n                this.searchingCode.emit(false); //si no encuentra\n                this.codeNotFound.emit(true);\n                console.log(error);\n            });\n        }\n    }\n\n    public getCode(): string {\n        return this.localStorageService.get('code');\n    }\n\n    private parseAccessToken(obj: any): AccessTokenModel {\n        let accessToken: AccessTokenModel = null;\n\n        //Check access token\n        if (obj && obj.access_token) {\n            //parse expiration date\n            let expiration = new Date();\n            expiration.setMinutes(expiration.getMinutes() + (obj.expires_in / 60));\n\n            //Creates the access token model\n            accessToken = new AccessTokenModel(\n                obj.access_token,\n                obj.refresh_token,\n                expiration\n            );\n        }\n        console.log(accessToken);\n        return accessToken;\n    }\n\n}","import { Component, OnInit } from '@angular/core';\nimport { Validators, FormGroup, FormBuilder } from '@angular/forms';\nimport { AuthService } from './solcre-auth-library.service';\n@Component({\n  selector: 'lib-auth-library',\n  templateUrl: './login.component.html',\n  styles: [] //syles broken the library\n})\nexport class SolcreAuthLibraryComponent implements OnInit {\n\n  signinForm: FormGroup;\n  searchingCode: boolean;\n  codeNotFound: boolean;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private authService: AuthService,\n  ) { }\n\n  ngOnInit() {\n    this.signinForm = this.formBuilder.group({\n      'email': this.formBuilder.control(null, [Validators.required, Validators.email]),\n      'password': this.formBuilder.control(null, Validators.required)\n    });\n    this.authService.codeNotFound.subscribe((state: boolean) => {\n      this.codeNotFound = state;\n    });\n    this.authService.searchingCode.subscribe((state: boolean) => {\n      this.searchingCode = state;\n    });\n  }\n\n  onSubmit() {\n    this.authService.login(this.signinForm.value.email, this.signinForm.value.password);\n  }\n\n  onBlur() {\n    this.codeNotFound = false;\n    this.searchingCode = false;\n    this.signinForm.invalid;\n    if (this.signinForm.value.email && this.signinForm.value.email.indexOf('@') > -1) {\n      let data: string = (this.signinForm.value.email).split(\"@\", 2);\n      let domain: string = data[1];\n      this.authService.setCode(domain);\n    }\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { BrowserModule } from '@angular/platform-browser';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { AuthService } from './solcre-auth-library.service';\nimport { AuthGuard } from './auth-guard-service';\nimport { SolcreAuthLibraryComponent } from './auth.component';\nimport { CommonModule } from '@angular/common';\nimport { LocalStorageModule } from 'angular-2-local-storage';\n\n@NgModule({\n    declarations: [\n        SolcreAuthLibraryComponent,\n    ], \n    imports: [\n        LocalStorageModule,\n        CommonModule,\n        FormsModule,\n        HttpClientModule,\n        ReactiveFormsModule,\n    ],\n    exports: [\n        SolcreAuthLibraryComponent\n    ],\n    providers: [\n        AuthService,\n    ]\n})\nexport class AuthModule { } ","import { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { Injectable } from '@angular/core';\nimport { AuthService } from './solcre-auth-library.service';\n\n\n@Injectable({ //duda\n    providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n    constructor(private authService: AuthService, private router: Router) { }\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n       if (this.authService.isAuthenticated()) {\n            return true;\n        } else {\n            this.router.navigate(['/oauth']);\n        }\n    }\n\n}","import { Injectable } from '@angular/core';\nimport { \n    HttpEvent, \n    HttpInterceptor, \n    HttpHandler, \n    HttpRequest,\n\tHttpErrorResponse\n} from '@angular/common/http';\nimport { Observable, BehaviorSubject, throwError } from 'rxjs';\nimport { catchError, filter, take, switchMap, finalize } from 'rxjs/operators';\nâ\nimport { AuthService } from './solcre-auth-library.service';\n// âimport { AccessTokenModel } from './access-token.model';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n    isRefreshingToken: boolean = false;\n    tokenSubject: BehaviorSubject<string> = new BehaviorSubject<string>(null);\nâ\n    constructor(\n        private authService: AuthService) { }\nâ\n    \n    //Intercep method\n    public intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        // Pass on the cloned request instead of the original request.\n        return next.handle(req)\n            .pipe(\n\t\t\t\tcatchError((error, caught) => {\n\t\t\t\t\t//Check error type\n\t\t\t\t\tif (error instanceof HttpErrorResponse) {\n                        console.log(error);\n                        switch (error.status) {\n\t\t\t\t\t\t\tcase 400:\n\t\t\t\t\t\t\t\treturn this.handle400Error(error);\n\t\t\t\t\t\t\tcase 401:\n\t\t\t\t\t\t\t\treturn this.handle401Error(error, req, next);\n\t\t\t\t\t\t\tcase 403:\n\t\t\t\t\t\t\t\treturn this.handle403Error(error);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn new Observable<HttpEvent<any>>();\n\t\t\t\t})\n\t\t\t) as any;\n    }\nâ\n    //Add authorization header to requests\n    private addToken(req: HttpRequest<any>, token: string): HttpRequest<any> {\n        return req.clone({ \n            setHeaders: { \n                Authorization: 'Bearer ' + token \n            }\n        });\n    }\nâ\n    //Helper function when the refresh token doesnt work\n    private logout(error: string){\n        //logout users, redirect to login page\n        this.authService.logout();\n        return throwError(error);\n    }\nâ\n    //Handle 403 error\n    private handle403Error(error: HttpErrorResponse) {\n        return this.logout(error.message);\n    }\nâ\n    //Hanfle 401 error\n    private handle401Error(error: HttpErrorResponse, req: HttpRequest<any>, next: HttpHandler) {\n        //@@TODO: find a way to configure it\n        //Ignore 401 status when the url are Oauth\n        if(req.url.indexOf('/oauth') > -1){\n            return throwError(error);\n        }\n        return this.logout(error.message);\nâ       \n    }\nâ\n    //Handle 400 error\n    private handle400Error(error:HttpErrorResponse) {\n        if (error \n            && error.status === 400 \n            && error.error \n            && error.error.error === 'invalid_grant') {\n            // If we get a 400 and the error message is 'invalid_grant', the token is no longer valid so logout.\n            return this.logout(error.message);\n        }\n        \n        //Normal flow\n        return throwError(error);\n    }\n}"],"names":[],"mappings":"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"}